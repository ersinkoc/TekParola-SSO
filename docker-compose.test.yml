version: '3.8'

services:
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tekparola_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@postgres-test:5432/tekparola_test
      REDIS_URL: redis://redis-test:6379
      JWT_SECRET: test-jwt-secret
      JWT_REFRESH_SECRET: test-refresh-secret
      SESSION_SECRET: test-session-secret
      PORT: 3000
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    ports:
      - "3001:3000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./jest.config.js:/app/jest.config.js
    command: npm run test:watch

volumes:
  postgres-test-data:

networks:
  default:
    name: tekparola-test-network
